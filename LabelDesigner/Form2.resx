<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="webBrowser1.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHh4AAAEACABgCAAAFgAAACgAAAAeAAAAPAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAQEBAAICAgADAwMABAQEAAUFBQAGBgYACAgIAAkJCQAKCgoACwsLAAwMDAANDQ0AEBAQABER
        EQATExMAFBQUABUVFQAWFhYAFxcXABgYGAAZGRkAGxsbABwcHAAgICAAISEhACIiIgAkJCQAJSUlACYm
        JgAoKCgAKioqACsrKwAsLCwALS0tAC8vLwAwMDAAMjIyADMzMwA2NjYAOTk5ADw8PAA9PT0AQUFBAERE
        RABHR0cASEhIAEpKSgBQUFAAUVFRAFJSUgBWVlYAWFhYAFlZWQBeXl4AYGBgAGJiYgBnZ2cAaGhoAGlp
        aQBqamoAa2trAGxsbABtbW0AcXFxAHNzcwB0dHQAdnZ2AHd3dwB5eXkAenp6AHt7ewB8fHwAfX19AH5+
        fgB/f38AgICAAIGBgQCDg4MAhISEAIWFhQCGhoYAh4eHAIiIiACJiYkAi4uLAIyMjACNjY0Ajo6OAJGR
        kQCSkpIAlJSUAJWVlQCWlpYAl5eXAJiYmACampoAm5ubAJycnACdnZ0An5+fAKCgoAChoaEAoqKiAKOj
        owClpaUApqamAKenpwCoqKgAqampAKqqqgCrq6sArKysAK2trQCurq4Ar6+vALCwsACxsbEAsrKyALOz
        swC0tLQAtbW1ALa2tgC3t7cAuLi4ALm5uQC6uroAu7u7AL29vQC+vr4Av7+/AMDAwADBwcEAw8PDAMTE
        xADFxcUAxsbGAMfHxwDIyMgAycnJAMzMzADNzc0Azs7OAM/PzwDQ0NAA0dHRANLS0gDT09MA1NTUANXV
        1QDW1tYA19fXANjY2ADZ2dkA2traANvb2wDc3NwA3d3dAN7e3gDf398A4ODgAOHh4QDi4uIA4+PjAOTk
        5ADl5eUA5ubmAOfn5wDo6OgA6enpAOrq6gDr6+sA7OzsAO3t7QDu7u4A7+/vAPDw8ADx8fEA8vLyAPPz
        8wD09PQA9fX1APb29gD39/cA+Pj4APn5+QD6+voA+/v7APz8/AD9/f0A/v7+AP///wAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAflpaWlpaWlpaX7e/qFqylVpan7+/v4pmvXRaWlqYAABZMVhYWFhYWDwmsr+eAIpoEld/mZm5
        iGO9RwAGVZcAAFlcvr6+vr6+hCayvp0BAAAkvVIAE6i+vr9GAAK4vgAAWVy5PzMzM52EJrJtLwAAAAkz
        HwATqHlCvLWysTaMAABZXLguAAAAmYQmspJ6enp6cAcAABOomIK9h3Z2eKMAAFlcuC4AAACZhCaysqmp
        qbOzLxoAEJS0v79HHS+ktgAAWVy4LgAAAJmEJrJiAAAAcr+/UwAAAHS/v0ddvSCHAABZXL2YlZWVtIQm
        smIAAIeov79TPJEnMENDf6S+IYcAAFlBiIiIiIiIXCaygkcAe4iIiV9chSU3SwFriIcYhwAAWxwcHBwc
        HBwcK7O6lgEZFQAAiYsAAHSmHxwWAACHAACzrq6urq6urq6vvmYeAJx3AAAcHAAAdLyuroIAAIcAAIRl
        ZbiNcb+/m2m4YjR9tqJ+fjgADG1ncb2/jAp6pQAAajk5tXtBoKB2P5VhVJ+7saCgRCQ8rH5NvL+VOpuy
        AAC+vr2/vqEDBV60E4WdAKyDAAUBS76/vr6/v7+9IogAAGxvv7+/ogAAKkCXY1ahUG6VCwBMv79/T7xg
        Pj0LhwAAWUGIiIh6a2trb7hiR757k7ENAEy/v5F2vYBrahWHAABcIB8FFzW6urq7v2JFubq8sQ0ATL+/
        v766vr++IYcAAL69ty17oQ8RESizYgUREXOxDQBMv7+/phWYv74hhwAAv7+9kKe1jIyMjrqfdQEAc7qM
        jJm/v7+2jLG/vo6rAACkmJiYmJiYmJiavKeFRiNzu5mys5iYmJiYmJiYmK8AAFkABgYGBgYGACWyYki+
        O3CuCI6QAAQGBgYGBgYAhwAAWVGlpaWlpaVxJrKvq787KDIBjpAOkaWlpaWlpB2HAABZXLx8dXV1rIQm
        sr+/v3xKAACOkBGol3V1dY6+IYcAAFlcuC4AAACZhCaysa6/v4YpAI6QEahuAAAAXb4hhwAAWVy4LgAA
        AJmEJrJjSb6/va0KjpARqG4AAABdviGHAABZXLguAAAAmYQmsqGav2JNTI6vkBGobgAAAF2+IYcAAFlc
        ulpRUVGkhCayv7+/ZFFQjq+QEaiGUVFRe74hhwAAWVy+vr6+vr6DJrK+vr+/v7AUj5AQp76+vr6+vSCH
        AABZFSUlJSUlJRsmsmZOvr+FLK+6kAAiJSUlJSUlA4cAAJOBgYGBgYGBgYS5l42+v6OEvr+qgYGBgYGB
        gYGBpgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA
</value>
  </data>
</root>